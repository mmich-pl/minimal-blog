{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/files/{id}": {
            "get": {
                "description": "Fetch the markdown file associated with a post from S3.",
                "produces": [
                    "text/markdown"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Retrieve post markdown file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Content File ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Markdown file",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Invalid request or post not found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/posts": {
            "get": {
                "description": "Fetch post details from Neo4j along with an image file stored in S3. The response contains post details in JSON format followed by the image file.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Retrieve post data along with the associated image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Posts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Post"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request or post not found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "This endpoint allows users to create a new post by submitting text data (title, content, thread, user_id) and a markdown file (.md).",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Create a new post with a markdown file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Markdown File",
                        "name": "markdown",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Title of the post",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of the thread to which the post belongs",
                        "name": "thread",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the user creating the post",
                        "name": "user_id",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PostCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/posts/{id}": {
            "get": {
                "description": "Fetch post details from Neo4j in JSON format.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Retrieve post metadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post metadata",
                        "schema": {
                            "$ref": "#/definitions/models.Post"
                        }
                    },
                    "400": {
                        "description": "Invalid request or post not found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/tags": {
            "get": {
                "description": "Fetches a list of all available tags",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "List all tags",
                "responses": {
                    "200": {
                        "description": "List of tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/threads": {
            "get": {
                "description": "Fetches a list of all available threads",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "threads"
                ],
                "summary": "List all threads",
                "responses": {
                    "200": {
                        "description": "List of threads",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Thread"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thread based on the provided request data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "threads"
                ],
                "summary": "Create a new thread",
                "parameters": [
                    {
                        "description": "Thread creation request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateThreadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ThreadCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "errors.ErrResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "application-level error message, for debugging",
                    "type": "string"
                },
                "message": {
                    "description": "user-level status message",
                    "type": "string"
                },
                "status-code": {
                    "description": "http response status code",
                    "type": "integer"
                }
            }
        },
        "models.CreateThreadRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.Post": {
            "type": "object",
            "properties": {
                "content_file": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "post_id": {
                    "type": "string"
                },
                "thread_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "view_count": {
                    "type": "integer"
                }
            }
        },
        "models.PostCreationResponse": {
            "type": "object",
            "properties": {
                "post_id": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "models.Thread": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "thread_id": {
                    "type": "string"
                }
            }
        },
        "models.ThreadCreationResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "thread_id": {
                    "type": "string"
                }
            }
        }
    }
}