definitions:
  errors.ErrResponse:
    properties:
      error:
        description: application-level error message, for debugging
        type: string
      message:
        description: user-level status message
        type: string
      status-code:
        description: http response status code
        type: integer
    type: object
  models.CreateThreadRequest:
    properties:
      name:
        type: string
      tags:
        items:
          type: string
        type: array
    type: object
  models.Post:
    properties:
      contentFle:
        type: string
      post_id:
        type: string
      title:
        type: string
      user_id:
        type: string
      view_count:
        type: integer
    type: object
  models.PostCreationResponse:
    properties:
      post_id:
        type: string
      status:
        type: integer
    type: object
  models.Thread:
    properties:
      name:
        type: string
      tags:
        items:
          type: string
        type: array
      thread_id:
        type: string
    type: object
  models.ThreadCreationResponse:
    properties:
      status:
        type: integer
      thread_id:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/posts:
    post:
      consumes:
      - multipart/form-data
      description: This endpoint allows users to create a new post by submitting text
        data (title, content, thread, user_id) and a markdown file (.md).
      parameters:
      - description: Markdown File
        in: formData
        name: markdown
        required: true
        type: file
      - description: Title of the post
        in: formData
        name: title
        required: true
        type: string
      - description: ID of the thread to which the post belongs
        in: formData
        name: thread
        required: true
        type: string
      - description: ID of the user creating the post
        in: formData
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PostCreationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.ErrResponse'
      summary: Create a new post with a markdown file
      tags:
      - posts
  /api/v1/posts/{id}/markdown:
    get:
      description: Fetch the markdown file associated with a post from S3.
      parameters:
      - description: Content File ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - text/markdown
      responses:
        "200":
          description: Markdown file
          schema:
            type: file
        "400":
          description: Invalid request or post not found
          schema:
            $ref: '#/definitions/errors.ErrResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.ErrResponse'
      summary: Retrieve post markdown file
      tags:
      - posts
  /api/v1/posts/{id}/metadata:
    get:
      consumes:
      - application/json
      description: Fetch post details from Neo4j in JSON format.
      parameters:
      - description: Post ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Post metadata
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Invalid request or post not found
          schema:
            $ref: '#/definitions/errors.ErrResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.ErrResponse'
      summary: Retrieve post metadata
      tags:
      - posts
  /api/v1/posts/{limit}:
    get:
      consumes:
      - application/json
      description: Fetch post details from Neo4j along with an image file stored in
        S3. The response contains post details in JSON format followed by the image
        file.
      parameters:
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Posts
          schema:
            items:
              $ref: '#/definitions/models.Post'
            type: array
        "400":
          description: Invalid request or post not found
          schema:
            $ref: '#/definitions/errors.ErrResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.ErrResponse'
      summary: Retrieve post data along with the associated image
      tags:
      - posts
  /api/v1/tags:
    get:
      description: Fetches a list of all available tags
      produces:
      - application/json
      responses:
        "200":
          description: List of tags
          schema:
            items:
              type: string
            type: array
        "404":
          description: Not found error
          schema:
            $ref: '#/definitions/errors.ErrResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.ErrResponse'
      summary: List all tags
      tags:
      - tags
  /api/v1/threads:
    get:
      description: Fetches a list of all available threads
      produces:
      - application/json
      responses:
        "200":
          description: List of threads
          schema:
            items:
              $ref: '#/definitions/models.Thread'
            type: array
        "404":
          description: Not found error
          schema:
            $ref: '#/definitions/errors.ErrResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.ErrResponse'
      summary: List all threads
      tags:
      - threads
    post:
      consumes:
      - application/json
      description: Create a new thread based on the provided request data
      parameters:
      - description: Thread creation request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateThreadRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ThreadCreationResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/errors.ErrResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.ErrResponse'
      summary: Create a new thread
      tags:
      - threads
swagger: "2.0"
